'''
project/
â”œâ”€â”€ config/
â”‚   â””â”€â”€ config.json
â”œâ”€â”€ core/
â”‚   â”œâ”€â”€ __init__.py
â”‚   â”œâ”€â”€ signal_handler.py
â”‚   â”œâ”€â”€ tick_handler.py
â”‚   â”œâ”€â”€ message_handler.py
â”‚   â””â”€â”€ initialization.py
â”œâ”€â”€ modules/
â”‚   â”œâ”€â”€ websocket_client_real_time.py
â”‚   â”œâ”€â”€ indicator.py
â”‚   â”œâ”€â”€ strategy.py
â”‚   â”œâ”€â”€ trader.py
â”‚   â””â”€â”€ signalChecker.py
â”œâ”€â”€ notifiers/
â”‚   â””â”€â”€ SignalDispatcher.py
â”œâ”€â”€ utils/
â”‚   â””â”€â”€ logger.py
â”œâ”€â”€ main.py
â””â”€â”€ signals.csv
'''
import asyncio

from core.initialization import initialize_components, load_configuration
from core.message_handler import handle_message

def main() -> None:
    """Main entry point for the application - pure orchestration."""
    # Initialize all components and configuration
    
    config = load_configuration()
    components = initialize_components(config)
    
    # Set up WebSocket client with dependencies injected
    
    ws_client = components['websocket_client']
    ws_client.set_message_callback(handle_message)
    
    # Start the application
    
    components['logger'].info("ðŸ”„ Starting Trading Bot...")
    asyncio.run(ws_client.connect())

if __name__ == "__main__":
    main()
